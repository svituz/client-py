#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  Generated from FHIR 4.0.1-9346c8cc45
#  2020, SMART Health IT.


import os
import io
import unittest
import json
from fhirclient.models import observation

class ObservationTests(unittest.TestCase):
    def instantiate_from(self, filename):
        datadir = os.environ.get('FHIR_UNITTEST_DATADIR') or ''
        with io.open(os.path.join(datadir, filename), 'r', encoding='utf-8') as handle:
            js = json.load(handle)
            self.assertEqual("Observation", js["resourceType"])
        return observation.Observation(js)

    def testObservation1(self):
        inst = self.instantiate_from('observation-example-secondsmoke.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation1(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation1(inst2)

    def implObservation1(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("social-history").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "social-history")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Social History").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Social History")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Social History").value)
        self.assertEqual(inst.category[0].text.as_json(), "Social History")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("39243-1").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "39243-1")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Second hand smoke exposure CPHS").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Second hand smoke exposure CPHS")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[1].code.value, FHIRCode("102409004").value)
        self.assertEqual(inst.code.coding[1].code.as_json(), "102409004")
        self.assertEqual(inst.code.coding[1].display.value, FHIRString("Second hand cigarette smoke (substance)").value)
        self.assertEqual(inst.code.coding[1].display.as_json(), "Second hand cigarette smoke (substance)")
        self.assertEqual(inst.code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("Second hand smoke exposure").value)
        self.assertEqual(inst.code.text.as_json(), "Second hand smoke exposure")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2016-05-18T22:33:22Z").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2016-05-18T22:33:22Z")
        self.assertEqual(inst.id.value, FHIRString("secondsmoke").value)
        self.assertEqual(inst.id.as_json(), "secondsmoke")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueCodeableConcept.coding[0].code.value, FHIRCode("373066001").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].code.as_json(), "373066001")
        self.assertEqual(inst.valueCodeableConcept.coding[0].display.value, FHIRString("Yes (qualifier value)").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].display.as_json(), "Yes (qualifier value)")
        self.assertEqual(inst.valueCodeableConcept.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.valueCodeableConcept.text.value, FHIRString("YES").value)
        self.assertEqual(inst.valueCodeableConcept.text.as_json(), "YES")

    def testObservation2(self):
        inst = self.instantiate_from('observation-example-20minute-apgar-score.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation2(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation2(inst2)

    def implObservation2(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("survey").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "survey")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Survey")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].text.as_json(), "Survey")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("443849008").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "443849008")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Apgar score at 20 minutes").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Apgar score at 20 minutes")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("20 minute Apgar Score").value)
        self.assertEqual(inst.code.text.as_json(), "20 minute Apgar Score")
        self.assertEqual(inst.component[0].code.coding[0].code.value, FHIRCode("249227004").value)
        self.assertEqual(inst.component[0].code.coding[0].code.as_json(), "249227004")
        self.assertEqual(inst.component[0].code.coding[0].display.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.coding[0].display.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[0].code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[0].code.text.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.text.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6724-4").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.as_json(), "LA6724-4")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.value, FHIRString("Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.as_json(), "Good color all over")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarcolor").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarcolor")
        self.assertEqual(inst.component[0].valueCodeableConcept.text.value, FHIRString("2. Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.text.as_json(), "2. Good color all over")
        self.assertEqual(inst.component[1].code.coding[0].code.value, FHIRCode("249223000").value)
        self.assertEqual(inst.component[1].code.coding[0].code.as_json(), "249223000")
        self.assertEqual(inst.component[1].code.coding[0].display.value, FHIRString("Apgar heart rate score").value)
        self.assertEqual(inst.component[1].code.coding[0].display.as_json(), "Apgar heart rate score")
        self.assertEqual(inst.component[1].code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[1].code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[1].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[1].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6718-6").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.as_json(), "LA6718-6")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.value, FHIRString("At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.as_json(), "At least 100 beats per minute")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarheartrate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarheartrate")
        self.assertEqual(inst.component[1].valueCodeableConcept.text.value, FHIRString("2. At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.text.as_json(), "2. At least 100 beats per minute")
        self.assertEqual(inst.component[2].code.coding[0].code.value, FHIRCode("249226008").value)
        self.assertEqual(inst.component[2].code.coding[0].code.as_json(), "249226008")
        self.assertEqual(inst.component[2].code.coding[0].display.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.coding[0].display.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[2].code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[2].code.text.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.text.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6721-0").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.as_json(), "LA6721-0")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.value, FHIRString("Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.as_json(), "Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarreflexirritability").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarreflexirritability")
        self.assertEqual(inst.component[2].valueCodeableConcept.text.value, FHIRString("2. Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.text.as_json(), "2. Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[3].code.coding[0].code.value, FHIRCode("249225007").value)
        self.assertEqual(inst.component[3].code.coding[0].code.as_json(), "249225007")
        self.assertEqual(inst.component[3].code.coding[0].display.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.coding[0].display.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[3].code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[3].code.text.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.text.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6715-2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.as_json(), "LA6715-2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.value, FHIRString("Active motion ").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.as_json(), "Active motion ")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarmuscletone").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarmuscletone")
        self.assertEqual(inst.component[3].valueCodeableConcept.text.value, FHIRString("2. Active motion").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.text.as_json(), "2. Active motion")
        self.assertEqual(inst.component[4].code.coding[0].code.value, FHIRCode("249224006").value)
        self.assertEqual(inst.component[4].code.coding[0].code.as_json(), "249224006")
        self.assertEqual(inst.component[4].code.coding[0].display.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.coding[0].display.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[4].code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[4].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6727-7").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.as_json(), "LA6727-7")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.value, FHIRString("Good, strong cry; normal rate and effort of breathing    ").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.as_json(), "Good, strong cry; normal rate and effort of breathing    ")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarrespiratoryeffort").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarrespiratoryeffort")
        self.assertEqual(inst.component[4].valueCodeableConcept.text.value, FHIRString("2. Good, strong cry; normal rate and effort of breathing").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.text.as_json(), "2. Good, strong cry; normal rate and effort of breathing")
        self.assertEqual(inst.contained[0].id.value, FHIRString("newborn").value)
        self.assertEqual(inst.contained[0].id.as_json(), "newborn")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2016-05-18T22:33:22Z").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2016-05-18T22:33:22Z")
        self.assertEqual(inst.id.value, FHIRString("20minute-apgar-score").value)
        self.assertEqual(inst.id.as_json(), "20minute-apgar-score")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("{score}").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "{score}")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.value, 10)

    def testObservation3(self):
        inst = self.instantiate_from('observation-example-1minute-apgar-score.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation3(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation3(inst2)

    def implObservation3(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("survey").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "survey")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Survey")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].text.as_json(), "Survey")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("9272-6").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "9272-6")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("1 minute Apgar Score").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "1 minute Apgar Score")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[1].code.value, FHIRCode("169895004").value)
        self.assertEqual(inst.code.coding[1].code.as_json(), "169895004")
        self.assertEqual(inst.code.coding[1].display.value, FHIRString("Apgar at 1 minute").value)
        self.assertEqual(inst.code.coding[1].display.as_json(), "Apgar at 1 minute")
        self.assertEqual(inst.code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("1 minute Apgar Score").value)
        self.assertEqual(inst.code.text.as_json(), "1 minute Apgar Score")
        self.assertEqual(inst.component[0].code.coding[0].code.value, FHIRCode("32406-1").value)
        self.assertEqual(inst.component[0].code.coding[0].code.as_json(), "32406-1")
        self.assertEqual(inst.component[0].code.coding[0].display.value, FHIRString("1 minute Apgar Color").value)
        self.assertEqual(inst.component[0].code.coding[0].display.as_json(), "1 minute Apgar Color")
        self.assertEqual(inst.component[0].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].code.coding[1].code.value, FHIRCode("249227004").value)
        self.assertEqual(inst.component[0].code.coding[1].code.as_json(), "249227004")
        self.assertEqual(inst.component[0].code.coding[1].display.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.coding[1].display.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[0].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[0].code.text.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.text.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6722-8").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.as_json(), "LA6722-8")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.value, FHIRString("The baby's whole body is completely bluish-gray or pale").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.as_json(), "The baby's whole body is completely bluish-gray or pale")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].valueDecimal, 0)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.value, FHIRCode("0").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.as_json(), "0")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarcolor").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarcolor")
        self.assertEqual(inst.component[0].valueCodeableConcept.text.value, FHIRString("0. The baby's whole body is completely bluish-gray or pale").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.text.as_json(), "0. The baby's whole body is completely bluish-gray or pale")
        self.assertEqual(inst.component[1].code.coding[0].code.value, FHIRCode("32407-9").value)
        self.assertEqual(inst.component[1].code.coding[0].code.as_json(), "32407-9")
        self.assertEqual(inst.component[1].code.coding[0].display.value, FHIRString("1 minute Apgar Heart Rate").value)
        self.assertEqual(inst.component[1].code.coding[0].display.as_json(), "1 minute Apgar Heart Rate")
        self.assertEqual(inst.component[1].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].code.coding[1].code.value, FHIRCode("249223000").value)
        self.assertEqual(inst.component[1].code.coding[1].code.as_json(), "249223000")
        self.assertEqual(inst.component[1].code.coding[1].display.value, FHIRString("Apgar heart rate score").value)
        self.assertEqual(inst.component[1].code.coding[1].display.as_json(), "Apgar heart rate score")
        self.assertEqual(inst.component[1].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[1].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[1].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[1].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6716-0").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.as_json(), "LA6716-0")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.value, FHIRString("No heart rate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.as_json(), "No heart rate")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].valueDecimal, 0)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.value, FHIRCode("0").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.as_json(), "0")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarheartrate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarheartrate")
        self.assertEqual(inst.component[1].valueCodeableConcept.text.value, FHIRString("0. No heart rate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.text.as_json(), "0. No heart rate")
        self.assertEqual(inst.component[2].code.coding[0].code.value, FHIRCode("32409-5").value)
        self.assertEqual(inst.component[2].code.coding[0].code.as_json(), "32409-5")
        self.assertEqual(inst.component[2].code.coding[0].display.value, FHIRString("1 minute Apgar Reflex Irritability").value)
        self.assertEqual(inst.component[2].code.coding[0].display.as_json(), "1 minute Apgar Reflex Irritability")
        self.assertEqual(inst.component[2].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].code.coding[1].code.value, FHIRCode("249226008").value)
        self.assertEqual(inst.component[2].code.coding[1].code.as_json(), "249226008")
        self.assertEqual(inst.component[2].code.coding[1].display.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.coding[1].display.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[2].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[2].code.text.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.text.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6719-4").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.as_json(), "LA6719-4")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.value, FHIRString("No response to airways being suctioned").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.as_json(), "No response to airways being suctioned")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].valueDecimal, 0)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.value, FHIRCode("0").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.as_json(), "0")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarreflexirritability").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarreflexirritability")
        self.assertEqual(inst.component[2].valueCodeableConcept.text.value, FHIRString("0. No response to airways being suctioned").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.text.as_json(), "0. No response to airways being suctioned")
        self.assertEqual(inst.component[3].code.coding[0].code.value, FHIRCode("32408-7").value)
        self.assertEqual(inst.component[3].code.coding[0].code.as_json(), "32408-7")
        self.assertEqual(inst.component[3].code.coding[0].display.value, FHIRString("1 minute Apgar Muscle Tone").value)
        self.assertEqual(inst.component[3].code.coding[0].display.as_json(), "1 minute Apgar Muscle Tone")
        self.assertEqual(inst.component[3].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].code.coding[1].code.value, FHIRCode("249225007").value)
        self.assertEqual(inst.component[3].code.coding[1].code.as_json(), "249225007")
        self.assertEqual(inst.component[3].code.coding[1].display.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.coding[1].display.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[3].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[3].code.text.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.text.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6713-7").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.as_json(), "LA6713-7")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.value, FHIRString("Limp; no movement").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.as_json(), "Limp; no movement")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].valueDecimal, 0)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.value, FHIRCode("0").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.as_json(), "0")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarmuscletone").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarmuscletone")
        self.assertEqual(inst.component[3].valueCodeableConcept.text.value, FHIRString("0. Limp; no movement").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.text.as_json(), "0. Limp; no movement")
        self.assertEqual(inst.component[4].code.coding[0].code.value, FHIRCode("32410-3").value)
        self.assertEqual(inst.component[4].code.coding[0].code.as_json(), "32410-3")
        self.assertEqual(inst.component[4].code.coding[0].display.value, FHIRString("1 minute Apgar Respiratory effort").value)
        self.assertEqual(inst.component[4].code.coding[0].display.as_json(), "1 minute Apgar Respiratory effort")
        self.assertEqual(inst.component[4].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].code.coding[1].code.value, FHIRCode("249224006").value)
        self.assertEqual(inst.component[4].code.coding[1].code.as_json(), "249224006")
        self.assertEqual(inst.component[4].code.coding[1].display.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.coding[1].display.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[4].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[4].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6725-1").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.as_json(), "LA6725-1")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.value, FHIRString("Not breathing").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.as_json(), "Not breathing")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].valueDecimal, 0)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.value, FHIRCode("0").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.as_json(), "0")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarrespiratoryeffort").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarrespiratoryeffort")
        self.assertEqual(inst.component[4].valueCodeableConcept.text.value, FHIRString("0. Not breathing").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.text.as_json(), "0. Not breathing")
        self.assertEqual(inst.contained[0].id.value, FHIRString("newborn").value)
        self.assertEqual(inst.contained[0].id.as_json(), "newborn")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2016-05-18T22:33:22Z").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2016-05-18T22:33:22Z")
        self.assertEqual(inst.id.value, FHIRString("1minute-apgar-score").value)
        self.assertEqual(inst.id.as_json(), "1minute-apgar-score")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("{score}").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "{score}")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.value, 0)

    def testObservation4(self):
        inst = self.instantiate_from('observation-example-f004-erythrocyte.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation4(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation4(inst2)

    def implObservation4(self, inst):
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("789-8").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "789-8")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Erythrocytes [#/volume] in Blood by Automated count").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Erythrocytes [#/volume] in Blood by Automated count")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.effectivePeriod.end.value, FHIRDateTime("2013-04-05T10:30:10+01:00").value)
        self.assertEqual(inst.effectivePeriod.end.as_json(), "2013-04-05T10:30:10+01:00")
        self.assertEqual(inst.effectivePeriod.start.value, FHIRDateTime("2013-04-02T10:30:10+01:00").value)
        self.assertEqual(inst.effectivePeriod.start.as_json(), "2013-04-02T10:30:10+01:00")
        self.assertEqual(inst.id.value, FHIRString("f004").value)
        self.assertEqual(inst.id.as_json(), "f004")
        self.assertEqual(inst.identifier[0].system.value, FHIRUri("http://www.bmc.nl/zorgportal/identifiers/observations").value)
        self.assertEqual(inst.identifier[0].system.as_json(), "http://www.bmc.nl/zorgportal/identifiers/observations")
        self.assertEqual(inst.identifier[0].use.value, FHIRCode("official").value)
        self.assertEqual(inst.identifier[0].use.as_json(), "official")
        self.assertEqual(inst.identifier[0].value.value, FHIRString("6326").value)
        self.assertEqual(inst.identifier[0].value.as_json(), "6326")
        self.assertEqual(inst.interpretation[0].coding[0].code.value, FHIRCode("L").value)
        self.assertEqual(inst.interpretation[0].coding[0].code.as_json(), "L")
        self.assertEqual(inst.interpretation[0].coding[0].display.value, FHIRString("Low").value)
        self.assertEqual(inst.interpretation[0].coding[0].display.as_json(), "Low")
        self.assertEqual(inst.interpretation[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation").value)
        self.assertEqual(inst.interpretation[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation")
        self.assertEqual(inst.issued.value, FHIRInstant("2013-04-03T15:30:10+01:00").value)
        self.assertEqual(inst.issued.as_json(), "2013-04-03T15:30:10+01:00")
        self.assertEqual(inst.issued.date, FHIRInstant('2013-04-03T15:30:10+01:00').date)
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("10*12/L").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "10*12/L")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.unit.value, FHIRString("10^12/L").value)
        self.assertEqual(inst.valueQuantity.unit.as_json(), "10^12/L")
        self.assertEqual(inst.valueQuantity.value, 4.12)

    def testObservation5(self):
        inst = self.instantiate_from('observation-example-bloodpressure.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation5(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation5(inst2)

    def implObservation5(self, inst):
        self.assertEqual(inst.bodySite.coding[0].code.value, FHIRCode("368209003").value)
        self.assertEqual(inst.bodySite.coding[0].code.as_json(), "368209003")
        self.assertEqual(inst.bodySite.coding[0].display.value, FHIRString("Right arm").value)
        self.assertEqual(inst.bodySite.coding[0].display.as_json(), "Right arm")
        self.assertEqual(inst.bodySite.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.bodySite.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("vital-signs").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "vital-signs")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Vital Signs").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Vital Signs")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("85354-9").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "85354-9")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Blood pressure panel with all children optional").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Blood pressure panel with all children optional")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.text.value, FHIRString("Blood pressure systolic & diastolic").value)
        self.assertEqual(inst.code.text.as_json(), "Blood pressure systolic & diastolic")
        self.assertEqual(inst.component[0].code.coding[0].code.value, FHIRCode("8480-6").value)
        self.assertEqual(inst.component[0].code.coding[0].code.as_json(), "8480-6")
        self.assertEqual(inst.component[0].code.coding[0].display.value, FHIRString("Systolic blood pressure").value)
        self.assertEqual(inst.component[0].code.coding[0].display.as_json(), "Systolic blood pressure")
        self.assertEqual(inst.component[0].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].code.coding[1].code.value, FHIRCode("271649006").value)
        self.assertEqual(inst.component[0].code.coding[1].code.as_json(), "271649006")
        self.assertEqual(inst.component[0].code.coding[1].display.value, FHIRString("Systolic blood pressure").value)
        self.assertEqual(inst.component[0].code.coding[1].display.as_json(), "Systolic blood pressure")
        self.assertEqual(inst.component[0].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[0].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[0].code.coding[2].code.value, FHIRCode("bp-s").value)
        self.assertEqual(inst.component[0].code.coding[2].code.as_json(), "bp-s")
        self.assertEqual(inst.component[0].code.coding[2].display.value, FHIRString("Systolic Blood pressure").value)
        self.assertEqual(inst.component[0].code.coding[2].display.as_json(), "Systolic Blood pressure")
        self.assertEqual(inst.component[0].code.coding[2].system.value, FHIRUri("http://acme.org/devices/clinical-codes").value)
        self.assertEqual(inst.component[0].code.coding[2].system.as_json(), "http://acme.org/devices/clinical-codes")
        self.assertEqual(inst.component[0].interpretation[0].coding[0].code.value, FHIRCode("N").value)
        self.assertEqual(inst.component[0].interpretation[0].coding[0].code.as_json(), "N")
        self.assertEqual(inst.component[0].interpretation[0].coding[0].display.value, FHIRString("normal").value)
        self.assertEqual(inst.component[0].interpretation[0].coding[0].display.as_json(), "normal")
        self.assertEqual(inst.component[0].interpretation[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation").value)
        self.assertEqual(inst.component[0].interpretation[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation")
        self.assertEqual(inst.component[0].interpretation[0].text.value, FHIRString("Normal").value)
        self.assertEqual(inst.component[0].interpretation[0].text.as_json(), "Normal")
        self.assertEqual(inst.component[0].valueQuantity.code.value, FHIRCode("mm[Hg]").value)
        self.assertEqual(inst.component[0].valueQuantity.code.as_json(), "mm[Hg]")
        self.assertEqual(inst.component[0].valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.component[0].valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.component[0].valueQuantity.unit.value, FHIRString("mmHg").value)
        self.assertEqual(inst.component[0].valueQuantity.unit.as_json(), "mmHg")
        self.assertEqual(inst.component[0].valueQuantity.value, 107)
        self.assertEqual(inst.component[1].code.coding[0].code.value, FHIRCode("8462-4").value)
        self.assertEqual(inst.component[1].code.coding[0].code.as_json(), "8462-4")
        self.assertEqual(inst.component[1].code.coding[0].display.value, FHIRString("Diastolic blood pressure").value)
        self.assertEqual(inst.component[1].code.coding[0].display.as_json(), "Diastolic blood pressure")
        self.assertEqual(inst.component[1].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].interpretation[0].coding[0].code.value, FHIRCode("L").value)
        self.assertEqual(inst.component[1].interpretation[0].coding[0].code.as_json(), "L")
        self.assertEqual(inst.component[1].interpretation[0].coding[0].display.value, FHIRString("low").value)
        self.assertEqual(inst.component[1].interpretation[0].coding[0].display.as_json(), "low")
        self.assertEqual(inst.component[1].interpretation[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation").value)
        self.assertEqual(inst.component[1].interpretation[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation")
        self.assertEqual(inst.component[1].interpretation[0].text.value, FHIRString("Below low normal").value)
        self.assertEqual(inst.component[1].interpretation[0].text.as_json(), "Below low normal")
        self.assertEqual(inst.component[1].valueQuantity.code.value, FHIRCode("mm[Hg]").value)
        self.assertEqual(inst.component[1].valueQuantity.code.as_json(), "mm[Hg]")
        self.assertEqual(inst.component[1].valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.component[1].valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.component[1].valueQuantity.unit.value, FHIRString("mmHg").value)
        self.assertEqual(inst.component[1].valueQuantity.unit.as_json(), "mmHg")
        self.assertEqual(inst.component[1].valueQuantity.value, 60)
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2012-09-17").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2012-09-17")
        self.assertEqual(inst.id.value, FHIRString("blood-pressure").value)
        self.assertEqual(inst.id.as_json(), "blood-pressure")
        self.assertEqual(inst.identifier[0].system.value, FHIRUri("urn:ietf:rfc:3986").value)
        self.assertEqual(inst.identifier[0].system.as_json(), "urn:ietf:rfc:3986")
        self.assertEqual(inst.identifier[0].value.value, FHIRString("urn:uuid:187e0c12-8dd2-67e2-99b2-bf273c878281").value)
        self.assertEqual(inst.identifier[0].value.as_json(), "urn:uuid:187e0c12-8dd2-67e2-99b2-bf273c878281")
        self.assertEqual(inst.interpretation[0].coding[0].code.value, FHIRCode("L").value)
        self.assertEqual(inst.interpretation[0].coding[0].code.as_json(), "L")
        self.assertEqual(inst.interpretation[0].coding[0].display.value, FHIRString("low").value)
        self.assertEqual(inst.interpretation[0].coding[0].display.as_json(), "low")
        self.assertEqual(inst.interpretation[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation").value)
        self.assertEqual(inst.interpretation[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation")
        self.assertEqual(inst.interpretation[0].text.value, FHIRString("Below low normal").value)
        self.assertEqual(inst.interpretation[0].text.as_json(), "Below low normal")
        self.assertEqual(inst.meta.profile[0].value, FHIRCanonical("http://hl7.org/fhir/StructureDefinition/vitalsigns").value)
        self.assertEqual(inst.meta.profile[0].as_json(), "http://hl7.org/fhir/StructureDefinition/vitalsigns")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")

    def testObservation6(self):
        inst = self.instantiate_from('observation-example-TPMT-haplotype-one.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation6(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation6(inst2)

    def implObservation6(self, inst):
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("363779003").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "363779003")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Genotype determination").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Genotype determination")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("Haplotype Call").value)
        self.assertEqual(inst.code.text.as_json(), "Haplotype Call")
        self.assertEqual(inst.extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/observation-geneticsGene").value)
        self.assertEqual(inst.extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/observation-geneticsGene")
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].code.value, FHIRCode("12014").value)
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].code.as_json(), "12014")
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].display.value, FHIRString("TPMT").value)
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].display.as_json(), "TPMT")
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].system.value, FHIRUri("http://www.genenames.org").value)
        self.assertEqual(inst.extension[0].valueCodeableConcept.coding[0].system.as_json(), "http://www.genenames.org")
        self.assertEqual(inst.id.value, FHIRString("example-TPMT-haplotype-one").value)
        self.assertEqual(inst.id.as_json(), "example-TPMT-haplotype-one")
        self.assertEqual(inst.issued.value, FHIRInstant("2013-04-03T15:30:10+01:00").value)
        self.assertEqual(inst.issued.as_json(), "2013-04-03T15:30:10+01:00")
        self.assertEqual(inst.issued.date, FHIRInstant('2013-04-03T15:30:10+01:00').date)
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("unknown").value)
        self.assertEqual(inst.status.as_json(), "unknown")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueCodeableConcept.coding[0].code.value, FHIRCode("PA166128347").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].code.as_json(), "PA166128347")
        self.assertEqual(inst.valueCodeableConcept.coding[0].display.value, FHIRString("*1").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].display.as_json(), "*1")
        self.assertEqual(inst.valueCodeableConcept.coding[0].system.value, FHIRUri("http://pharmakb.org").value)
        self.assertEqual(inst.valueCodeableConcept.coding[0].system.as_json(), "http://pharmakb.org")

    def testObservation7(self):
        inst = self.instantiate_from('observation-example-5minute-apgar-score.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation7(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation7(inst2)

    def implObservation7(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("survey").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "survey")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Survey")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].text.as_json(), "Survey")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("9274-2").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "9274-2")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("5 minute Apgar Score").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "5 minute Apgar Score")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[1].code.value, FHIRCode("169909004").value)
        self.assertEqual(inst.code.coding[1].code.as_json(), "169909004")
        self.assertEqual(inst.code.coding[1].display.value, FHIRString("Apgar at 5 minutes").value)
        self.assertEqual(inst.code.coding[1].display.as_json(), "Apgar at 5 minutes")
        self.assertEqual(inst.code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("5 minute Apgar Score").value)
        self.assertEqual(inst.code.text.as_json(), "5 minute Apgar Score")
        self.assertEqual(inst.component[0].code.coding[0].code.value, FHIRCode("32411-1").value)
        self.assertEqual(inst.component[0].code.coding[0].code.as_json(), "32411-1")
        self.assertEqual(inst.component[0].code.coding[0].display.value, FHIRString("5 minute Apgar Color").value)
        self.assertEqual(inst.component[0].code.coding[0].display.as_json(), "5 minute Apgar Color")
        self.assertEqual(inst.component[0].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].code.coding[1].code.value, FHIRCode("249227004").value)
        self.assertEqual(inst.component[0].code.coding[1].code.as_json(), "249227004")
        self.assertEqual(inst.component[0].code.coding[1].display.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.coding[1].display.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[0].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[0].code.text.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.text.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6724-4").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.as_json(), "LA6724-4")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.value, FHIRString("Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.as_json(), "Good color all over")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarcolor").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarcolor")
        self.assertEqual(inst.component[0].valueCodeableConcept.text.value, FHIRString("2. Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.text.as_json(), "2. Good color all over")
        self.assertEqual(inst.component[1].code.coding[0].code.value, FHIRCode("32412-9").value)
        self.assertEqual(inst.component[1].code.coding[0].code.as_json(), "32412-9")
        self.assertEqual(inst.component[1].code.coding[0].display.value, FHIRString("5 minute Apgar Heart Rate").value)
        self.assertEqual(inst.component[1].code.coding[0].display.as_json(), "5 minute Apgar Heart Rate")
        self.assertEqual(inst.component[1].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].code.coding[1].code.value, FHIRCode("249223000").value)
        self.assertEqual(inst.component[1].code.coding[1].code.as_json(), "249223000")
        self.assertEqual(inst.component[1].code.coding[1].display.value, FHIRString("Apgar heart rate score").value)
        self.assertEqual(inst.component[1].code.coding[1].display.as_json(), "Apgar heart rate score")
        self.assertEqual(inst.component[1].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[1].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[1].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[1].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6718-6").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.as_json(), "LA6718-6")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.value, FHIRString("At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.as_json(), "At least 100 beats per minute")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarheartrate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarheartrate")
        self.assertEqual(inst.component[1].valueCodeableConcept.text.value, FHIRString("2. At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.text.as_json(), "2. At least 100 beats per minute")
        self.assertEqual(inst.component[2].code.coding[0].code.value, FHIRCode("32414-5").value)
        self.assertEqual(inst.component[2].code.coding[0].code.as_json(), "32414-5")
        self.assertEqual(inst.component[2].code.coding[0].display.value, FHIRString("5 minute Apgar Reflex Irritability").value)
        self.assertEqual(inst.component[2].code.coding[0].display.as_json(), "5 minute Apgar Reflex Irritability")
        self.assertEqual(inst.component[2].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].code.coding[1].code.value, FHIRCode("249226008").value)
        self.assertEqual(inst.component[2].code.coding[1].code.as_json(), "249226008")
        self.assertEqual(inst.component[2].code.coding[1].display.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.coding[1].display.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[2].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[2].code.text.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.text.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6721-0").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.as_json(), "LA6721-0")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.value, FHIRString("Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.as_json(), "Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarreflexirritability").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarreflexirritability")
        self.assertEqual(inst.component[2].valueCodeableConcept.text.value, FHIRString("2. Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.text.as_json(), "2. Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[3].code.coding[0].code.value, FHIRCode("32413-7").value)
        self.assertEqual(inst.component[3].code.coding[0].code.as_json(), "32413-7")
        self.assertEqual(inst.component[3].code.coding[0].display.value, FHIRString("5 minute Apgar Muscle Tone").value)
        self.assertEqual(inst.component[3].code.coding[0].display.as_json(), "5 minute Apgar Muscle Tone")
        self.assertEqual(inst.component[3].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].code.coding[1].code.value, FHIRCode("249225007").value)
        self.assertEqual(inst.component[3].code.coding[1].code.as_json(), "249225007")
        self.assertEqual(inst.component[3].code.coding[1].display.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.coding[1].display.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[3].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[3].code.text.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.text.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6715-2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.as_json(), "LA6715-2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.value, FHIRString("Active motion ").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.as_json(), "Active motion ")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarmuscletone").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarmuscletone")
        self.assertEqual(inst.component[3].valueCodeableConcept.text.value, FHIRString("2. Active motion").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.text.as_json(), "2. Active motion")
        self.assertEqual(inst.component[4].code.coding[0].code.value, FHIRCode("32415-2").value)
        self.assertEqual(inst.component[4].code.coding[0].code.as_json(), "32415-2")
        self.assertEqual(inst.component[4].code.coding[0].display.value, FHIRString("5 minute Apgar Respiratory effort").value)
        self.assertEqual(inst.component[4].code.coding[0].display.as_json(), "5 minute Apgar Respiratory effort")
        self.assertEqual(inst.component[4].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].code.coding[1].code.value, FHIRCode("249224006").value)
        self.assertEqual(inst.component[4].code.coding[1].code.as_json(), "249224006")
        self.assertEqual(inst.component[4].code.coding[1].display.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.coding[1].display.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[4].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[4].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6727-7").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.as_json(), "LA6727-7")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.value, FHIRString("Good, strong cry; normal rate and effort of breathing    ").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.as_json(), "Good, strong cry; normal rate and effort of breathing    ")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarrespiratoryeffort").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarrespiratoryeffort")
        self.assertEqual(inst.component[4].valueCodeableConcept.text.value, FHIRString("2. Good, strong cry; normal rate and effort of breathing").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.text.as_json(), "2. Good, strong cry; normal rate and effort of breathing")
        self.assertEqual(inst.contained[0].id.value, FHIRString("newborn").value)
        self.assertEqual(inst.contained[0].id.as_json(), "newborn")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2016-05-18T22:33:22Z").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2016-05-18T22:33:22Z")
        self.assertEqual(inst.id.value, FHIRString("5minute-apgar-score").value)
        self.assertEqual(inst.id.as_json(), "5minute-apgar-score")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("{score}").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "{score}")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.value, 10)

    def testObservation8(self):
        inst = self.instantiate_from('observation-example-satO2.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation8(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation8(inst2)

    def implObservation8(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("vital-signs").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "vital-signs")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Vital Signs").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Vital Signs")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Vital Signs").value)
        self.assertEqual(inst.category[0].text.as_json(), "Vital Signs")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("2708-6").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "2708-6")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Oxygen saturation in Arterial blood").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Oxygen saturation in Arterial blood")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[1].code.value, FHIRCode("59408-5").value)
        self.assertEqual(inst.code.coding[1].code.as_json(), "59408-5")
        self.assertEqual(inst.code.coding[1].display.value, FHIRString("Oxygen saturation in Arterial blood by Pulse oximetry").value)
        self.assertEqual(inst.code.coding[1].display.as_json(), "Oxygen saturation in Arterial blood by Pulse oximetry")
        self.assertEqual(inst.code.coding[1].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[1].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[2].code.value, FHIRCode("150456").value)
        self.assertEqual(inst.code.coding[2].code.as_json(), "150456")
        self.assertEqual(inst.code.coding[2].display.value, FHIRString("MDC_PULS_OXIM_SAT_O2").value)
        self.assertEqual(inst.code.coding[2].display.as_json(), "MDC_PULS_OXIM_SAT_O2")
        self.assertEqual(inst.code.coding[2].system.value, FHIRUri("urn:iso:std:iso:11073:10101").value)
        self.assertEqual(inst.code.coding[2].system.as_json(), "urn:iso:std:iso:11073:10101")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2014-12-05T09:30:10+01:00").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2014-12-05T09:30:10+01:00")
        self.assertEqual(inst.id.value, FHIRString("satO2").value)
        self.assertEqual(inst.id.as_json(), "satO2")
        self.assertEqual(inst.identifier[0].system.value, FHIRUri("http://goodcare.org/observation/id").value)
        self.assertEqual(inst.identifier[0].system.as_json(), "http://goodcare.org/observation/id")
        self.assertEqual(inst.identifier[0].value.value, FHIRString("o1223435-10").value)
        self.assertEqual(inst.identifier[0].value.as_json(), "o1223435-10")
        self.assertEqual(inst.interpretation[0].coding[0].code.value, FHIRCode("N").value)
        self.assertEqual(inst.interpretation[0].coding[0].code.as_json(), "N")
        self.assertEqual(inst.interpretation[0].coding[0].display.value, FHIRString("Normal").value)
        self.assertEqual(inst.interpretation[0].coding[0].display.as_json(), "Normal")
        self.assertEqual(inst.interpretation[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation").value)
        self.assertEqual(inst.interpretation[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation")
        self.assertEqual(inst.interpretation[0].text.value, FHIRString("Normal (applies to non-numeric results)").value)
        self.assertEqual(inst.interpretation[0].text.as_json(), "Normal (applies to non-numeric results)")
        self.assertEqual(inst.meta.profile[0].value, FHIRCanonical("http://hl7.org/fhir/StructureDefinition/vitalsigns").value)
        self.assertEqual(inst.meta.profile[0].as_json(), "http://hl7.org/fhir/StructureDefinition/vitalsigns")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.referenceRange[0].high.code.value, FHIRCode("%").value)
        self.assertEqual(inst.referenceRange[0].high.code.as_json(), "%")
        self.assertEqual(inst.referenceRange[0].high.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.referenceRange[0].high.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.referenceRange[0].high.unit.value, FHIRString("%").value)
        self.assertEqual(inst.referenceRange[0].high.unit.as_json(), "%")
        self.assertEqual(inst.referenceRange[0].high.value, 99)
        self.assertEqual(inst.referenceRange[0].low.code.value, FHIRCode("%").value)
        self.assertEqual(inst.referenceRange[0].low.code.as_json(), "%")
        self.assertEqual(inst.referenceRange[0].low.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.referenceRange[0].low.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.referenceRange[0].low.unit.value, FHIRString("%").value)
        self.assertEqual(inst.referenceRange[0].low.unit.as_json(), "%")
        self.assertEqual(inst.referenceRange[0].low.value, 90)
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("%").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "%")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.unit.value, FHIRString("%").value)
        self.assertEqual(inst.valueQuantity.unit.as_json(), "%")
        self.assertEqual(inst.valueQuantity.value, 95)

    def testObservation9(self):
        inst = self.instantiate_from('observation-example-head-circumference.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation9(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation9(inst2)

    def implObservation9(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("vital-signs").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "vital-signs")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Vital Signs").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Vital Signs")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Vital Signs").value)
        self.assertEqual(inst.category[0].text.as_json(), "Vital Signs")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("9843-4").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "9843-4")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("Head Occipital-frontal circumference").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "Head Occipital-frontal circumference")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.text.value, FHIRString("Head Circumference").value)
        self.assertEqual(inst.code.text.as_json(), "Head Circumference")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("1999-07-02").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "1999-07-02")
        self.assertEqual(inst.id.value, FHIRString("head-circumference").value)
        self.assertEqual(inst.id.as_json(), "head-circumference")
        self.assertEqual(inst.meta.profile[0].value, FHIRCanonical("http://hl7.org/fhir/StructureDefinition/vitalsigns").value)
        self.assertEqual(inst.meta.profile[0].as_json(), "http://hl7.org/fhir/StructureDefinition/vitalsigns")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("cm").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "cm")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.unit.value, FHIRString("cm").value)
        self.assertEqual(inst.valueQuantity.unit.as_json(), "cm")
        self.assertEqual(inst.valueQuantity.value, 51.2)

    def testObservation10(self):
        inst = self.instantiate_from('observation-example-10minute-apgar-score.json')
        self.assertIsNotNone(inst, 'Must have instantiated a Observation instance')
        self.implObservation10(inst)

        js = inst.as_json()
        self.assertEqual("Observation", js["resourceType"])
        inst2 = observation.Observation(js)
        self.implObservation10(inst2)

    def implObservation10(self, inst):
        self.assertEqual(inst.category[0].coding[0].code.value, FHIRCode("survey").value)
        self.assertEqual(inst.category[0].coding[0].code.as_json(), "survey")
        self.assertEqual(inst.category[0].coding[0].display.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].coding[0].display.as_json(), "Survey")
        self.assertEqual(inst.category[0].coding[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/observation-category").value)
        self.assertEqual(inst.category[0].coding[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/observation-category")
        self.assertEqual(inst.category[0].text.value, FHIRString("Survey").value)
        self.assertEqual(inst.category[0].text.as_json(), "Survey")
        self.assertEqual(inst.code.coding[0].code.value, FHIRCode("9271-8").value)
        self.assertEqual(inst.code.coding[0].code.as_json(), "9271-8")
        self.assertEqual(inst.code.coding[0].display.value, FHIRString("10 minute Apgar Score").value)
        self.assertEqual(inst.code.coding[0].display.as_json(), "10 minute Apgar Score")
        self.assertEqual(inst.code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.code.coding[1].code.value, FHIRCode("169922007").value)
        self.assertEqual(inst.code.coding[1].code.as_json(), "169922007")
        self.assertEqual(inst.code.coding[1].display.value, FHIRString("Apgar at 10 minutes").value)
        self.assertEqual(inst.code.coding[1].display.as_json(), "Apgar at 10 minutes")
        self.assertEqual(inst.code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.code.text.value, FHIRString("10 minute Apgar Score").value)
        self.assertEqual(inst.code.text.as_json(), "10 minute Apgar Score")
        self.assertEqual(inst.component[0].code.coding[0].code.value, FHIRCode("32401-2").value)
        self.assertEqual(inst.component[0].code.coding[0].code.as_json(), "32401-2")
        self.assertEqual(inst.component[0].code.coding[0].display.value, FHIRString("10 minute Apgar Color").value)
        self.assertEqual(inst.component[0].code.coding[0].display.as_json(), "10 minute Apgar Color")
        self.assertEqual(inst.component[0].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].code.coding[1].code.value, FHIRCode("249227004").value)
        self.assertEqual(inst.component[0].code.coding[1].code.as_json(), "249227004")
        self.assertEqual(inst.component[0].code.coding[1].display.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.coding[1].display.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[0].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[0].code.text.value, FHIRString("Apgar color score").value)
        self.assertEqual(inst.component[0].code.text.as_json(), "Apgar color score")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6724-4").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].code.as_json(), "LA6724-4")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.value, FHIRString("Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].display.as_json(), "Good color all over")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarcolor").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarcolor")
        self.assertEqual(inst.component[0].valueCodeableConcept.text.value, FHIRString("2. Good color all over").value)
        self.assertEqual(inst.component[0].valueCodeableConcept.text.as_json(), "2. Good color all over")
        self.assertEqual(inst.component[1].code.coding[0].code.value, FHIRCode("32402-0").value)
        self.assertEqual(inst.component[1].code.coding[0].code.as_json(), "32402-0")
        self.assertEqual(inst.component[1].code.coding[0].display.value, FHIRString("10 minute Apgar Heart Rate").value)
        self.assertEqual(inst.component[1].code.coding[0].display.as_json(), "10 minute Apgar Heart Rate")
        self.assertEqual(inst.component[1].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].code.coding[1].code.value, FHIRCode("249223000").value)
        self.assertEqual(inst.component[1].code.coding[1].code.as_json(), "249223000")
        self.assertEqual(inst.component[1].code.coding[1].display.value, FHIRString("Apgar heart rate score").value)
        self.assertEqual(inst.component[1].code.coding[1].display.as_json(), "Apgar heart rate score")
        self.assertEqual(inst.component[1].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[1].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[1].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[1].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6718-6").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].code.as_json(), "LA6718-6")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.value, FHIRString("At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].display.as_json(), "At least 100 beats per minute")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarheartrate").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarheartrate")
        self.assertEqual(inst.component[1].valueCodeableConcept.text.value, FHIRString("2. At least 100 beats per minute").value)
        self.assertEqual(inst.component[1].valueCodeableConcept.text.as_json(), "2. At least 100 beats per minute")
        self.assertEqual(inst.component[2].code.coding[0].code.value, FHIRCode("32404-6").value)
        self.assertEqual(inst.component[2].code.coding[0].code.as_json(), "32404-6")
        self.assertEqual(inst.component[2].code.coding[0].display.value, FHIRString("10 minute Apgar Reflex Irritability").value)
        self.assertEqual(inst.component[2].code.coding[0].display.as_json(), "10 minute Apgar Reflex Irritability")
        self.assertEqual(inst.component[2].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].code.coding[1].code.value, FHIRCode("249226008").value)
        self.assertEqual(inst.component[2].code.coding[1].code.as_json(), "249226008")
        self.assertEqual(inst.component[2].code.coding[1].display.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.coding[1].display.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[2].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[2].code.text.value, FHIRString("Apgar response to stimulus score").value)
        self.assertEqual(inst.component[2].code.text.as_json(), "Apgar response to stimulus score")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6721-0").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].code.as_json(), "LA6721-0")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.value, FHIRString("Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].display.as_json(), "Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarreflexirritability").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarreflexirritability")
        self.assertEqual(inst.component[2].valueCodeableConcept.text.value, FHIRString("2. Grimace and pulling away, cough, or sneeze during suctioning").value)
        self.assertEqual(inst.component[2].valueCodeableConcept.text.as_json(), "2. Grimace and pulling away, cough, or sneeze during suctioning")
        self.assertEqual(inst.component[3].code.coding[0].code.value, FHIRCode("32403-8").value)
        self.assertEqual(inst.component[3].code.coding[0].code.as_json(), "32403-8")
        self.assertEqual(inst.component[3].code.coding[0].display.value, FHIRString("10 minute Apgar Muscle Tone").value)
        self.assertEqual(inst.component[3].code.coding[0].display.as_json(), "10 minute Apgar Muscle Tone")
        self.assertEqual(inst.component[3].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].code.coding[1].code.value, FHIRCode("249225007").value)
        self.assertEqual(inst.component[3].code.coding[1].code.as_json(), "249225007")
        self.assertEqual(inst.component[3].code.coding[1].display.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.coding[1].display.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[3].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[3].code.text.value, FHIRString("Apgar muscle tone score").value)
        self.assertEqual(inst.component[3].code.text.as_json(), "Apgar muscle tone score")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6715-2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].code.as_json(), "LA6715-2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.value, FHIRString("Active motion ").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].display.as_json(), "Active motion ")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarmuscletone").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarmuscletone")
        self.assertEqual(inst.component[3].valueCodeableConcept.text.value, FHIRString("2. Active motion").value)
        self.assertEqual(inst.component[3].valueCodeableConcept.text.as_json(), "2. Active motion")
        self.assertEqual(inst.component[4].code.coding[0].code.value, FHIRCode("32405-3").value)
        self.assertEqual(inst.component[4].code.coding[0].code.as_json(), "32405-3")
        self.assertEqual(inst.component[4].code.coding[0].display.value, FHIRString("10 minute Apgar Respiratory effort").value)
        self.assertEqual(inst.component[4].code.coding[0].display.as_json(), "10 minute Apgar Respiratory effort")
        self.assertEqual(inst.component[4].code.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].code.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].code.coding[1].code.value, FHIRCode("249224006").value)
        self.assertEqual(inst.component[4].code.coding[1].code.as_json(), "249224006")
        self.assertEqual(inst.component[4].code.coding[1].display.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.coding[1].display.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].code.coding[1].system.value, FHIRUri("http://snomed.info/sct").value)
        self.assertEqual(inst.component[4].code.coding[1].system.as_json(), "http://snomed.info/sct")
        self.assertEqual(inst.component[4].code.text.value, FHIRString("Apgar respiratory effort score").value)
        self.assertEqual(inst.component[4].code.text.as_json(), "Apgar respiratory effort score")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.value, FHIRCode("LA6727-7").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].code.as_json(), "LA6727-7")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.value, FHIRString("Good, strong cry; normal rate and effort of breathing    ").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].display.as_json(), "Good, strong cry; normal rate and effort of breathing    ")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.value, FHIRUri("http://hl7.org/fhir/StructureDefinition/ordinalValue").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].url.as_json(), "http://hl7.org/fhir/StructureDefinition/ordinalValue")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].extension[0].valueDecimal, 2)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.value, FHIRUri("http://loinc.org").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[0].system.as_json(), "http://loinc.org")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.value, FHIRCode("2").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].code.as_json(), "2")
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.value, FHIRUri("http://acme.ped/apgarrespiratoryeffort").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.coding[1].system.as_json(), "http://acme.ped/apgarrespiratoryeffort")
        self.assertEqual(inst.component[4].valueCodeableConcept.text.value, FHIRString("2. Good, strong cry; normal rate and effort of breathing").value)
        self.assertEqual(inst.component[4].valueCodeableConcept.text.as_json(), "2. Good, strong cry; normal rate and effort of breathing")
        self.assertEqual(inst.contained[0].id.value, FHIRString("newborn").value)
        self.assertEqual(inst.contained[0].id.as_json(), "newborn")
        self.assertEqual(inst.effectiveDateTime.value, FHIRDateTime("2016-05-18T22:33:22Z").value)
        self.assertEqual(inst.effectiveDateTime.as_json(), "2016-05-18T22:33:22Z")
        self.assertEqual(inst.id.value, FHIRString("10minute-apgar-score").value)
        self.assertEqual(inst.id.as_json(), "10minute-apgar-score")
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode("HTEST").value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), "HTEST")
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString("test health data").value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), "test health data")
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri("http://terminology.hl7.org/CodeSystem/v3-ActReason").value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), "http://terminology.hl7.org/CodeSystem/v3-ActReason")
        self.assertEqual(inst.status.value, FHIRCode("final").value)
        self.assertEqual(inst.status.as_json(), "final")
        self.assertEqual(inst.text.status.value, FHIRCode("generated").value)
        self.assertEqual(inst.text.status.as_json(), "generated")
        self.assertEqual(inst.valueQuantity.code.value, FHIRCode("{score}").value)
        self.assertEqual(inst.valueQuantity.code.as_json(), "{score}")
        self.assertEqual(inst.valueQuantity.system.value, FHIRUri("http://unitsofmeasure.org").value)
        self.assertEqual(inst.valueQuantity.system.as_json(), "http://unitsofmeasure.org")
        self.assertEqual(inst.valueQuantity.value, 10)


from fhirclient.models.fhirdatatypes import FHIRCode, FHIRString, FHIRUri, FHIRDateTime, FHIRInstant, FHIRCanonical
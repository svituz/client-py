#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  Generated from FHIR 4.0.1-9346c8cc45 on 2020-03-25.
#  2020, SMART Health IT.


import os
import io
import unittest
import json
from fhirclient.models import auditevent

class AuditEventTests(unittest.TestCase):
    def instantiate_from(self, filename):
        datadir = os.environ.get('FHIR_UNITTEST_DATADIR') or ''
        with io.open(os.path.join(datadir, filename), 'r', encoding='utf-8') as handle:
            js = json.load(handle)
            self.assertEqual("AuditEvent", js["resourceType"])
        return auditevent.AuditEvent(js)

    def testAuditEvent1(self):
        inst = self.instantiate_from('audit-event-example-media.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent1(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent1(inst2)

    def implAuditEvent1(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('R').value)
        self.assertEqual(inst.action.as_json(), 'R')
        self.assertFalse(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[1].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[1].name.as_json(), 'Grahame Grieve')
        self.assertTrue(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[2].media.code.value, FHIRCode('110033').value)
        self.assertEqual(inst.agent[2].media.code.as_json(), '110033')
        self.assertEqual(inst.agent[2].media.display.value, FHIRString('DVD').value)
        self.assertEqual(inst.agent[2].media.display.as_json(), 'DVD')
        self.assertEqual(inst.agent[2].media.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[2].media.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.agent[2].name.value, FHIRString('Media title: Hello World').value)
        self.assertEqual(inst.agent[2].name.as_json(), 'Media title: Hello World')
        self.assertFalse(inst.agent[2].requestor)
        self.assertEqual(inst.agent[2].type.coding[0].code.value, FHIRCode('110154').value)
        self.assertEqual(inst.agent[2].type.coding[0].code.as_json(), '110154')
        self.assertEqual(inst.agent[2].type.coding[0].display.value, FHIRString('Destination Media').value)
        self.assertEqual(inst.agent[2].type.coding[0].display.as_json(), 'Destination Media')
        self.assertEqual(inst.agent[2].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[2].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].role.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].role.code.as_json(), '1')
        self.assertEqual(inst.entity[0].role.display.value, FHIRString('Patient').value)
        self.assertEqual(inst.entity[0].role.display.as_json(), 'Patient')
        self.assertEqual(inst.entity[0].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[0].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '1')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('Person').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'Person')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.entity[1].role.code.value, FHIRCode('20').value)
        self.assertEqual(inst.entity[1].role.code.as_json(), '20')
        self.assertEqual(inst.entity[1].role.display.value, FHIRString('Job').value)
        self.assertEqual(inst.entity[1].role.display.as_json(), 'Job')
        self.assertEqual(inst.entity[1].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[1].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[1].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[1].type.code.as_json(), '2')
        self.assertEqual(inst.entity[1].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[1].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[1].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[1].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.entity[2].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[2].type.code.as_json(), '2')
        self.assertEqual(inst.entity[2].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[2].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[2].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[2].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2015-08-27T23:42:24Z').value)
        self.assertEqual(inst.recorded.as_json(), '2015-08-27T23:42:24Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2015-08-27T23:42:24Z').date)
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('ITI-32').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'ITI-32')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('Distribute Document Set on Media').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'Distribute Document Set on Media')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('urn:oid:1.3.6.1.4.1.19376.1.2').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'urn:oid:1.3.6.1.4.1.19376.1.2')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110106').value)
        self.assertEqual(inst.type.code.as_json(), '110106')
        self.assertEqual(inst.type.display.value, FHIRString('Export').value)
        self.assertEqual(inst.type.display.as_json(), 'Export')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')

    def testAuditEvent2(self):
        inst = self.instantiate_from('audit-event-example-logout.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent2(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent2(inst2)

    def implAuditEvent2(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('E').value)
        self.assertEqual(inst.action.as_json(), 'E')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[0].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'Grahame Grieve')
        self.assertEqual(inst.agent[0].network.address.value, FHIRString('127.0.0.1').value)
        self.assertEqual(inst.agent[0].network.address.as_json(), '127.0.0.1')
        self.assertEqual(inst.agent[0].network.type.value, FHIRCode('2').value)
        self.assertEqual(inst.agent[0].network.type.as_json(), '2')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2013-06-20T23:46:41Z').value)
        self.assertEqual(inst.recorded.as_json(), '2013-06-20T23:46:41Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2013-06-20T23:46:41Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Cloud').value)
        self.assertEqual(inst.source.site.as_json(), 'Cloud')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('3').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '3')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Web Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Web Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('110123').value)
        self.assertEqual(inst.subtype[0].code.as_json(), '110123')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('Logout').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'Logout')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110114').value)
        self.assertEqual(inst.type.code.as_json(), '110114')
        self.assertEqual(inst.type.display.value, FHIRString('User Authentication').value)
        self.assertEqual(inst.type.display.as_json(), 'User Authentication')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')

    def testAuditEvent3(self):
        inst = self.instantiate_from('auditevent-example.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent3(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent3(inst2)

    def implAuditEvent3(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('E').value)
        self.assertEqual(inst.action.as_json(), 'E')
        self.assertEqual(inst.agent[0].network.address.value, FHIRString('127.0.0.1').value)
        self.assertEqual(inst.agent[0].network.address.as_json(), '127.0.0.1')
        self.assertEqual(inst.agent[0].network.type.value, FHIRCode('2').value)
        self.assertEqual(inst.agent[0].network.type.as_json(), '2')
        self.assertFalse(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].role[0].text.value, FHIRString('Service User (Logon)').value)
        self.assertEqual(inst.agent[0].role[0].text.as_json(), 'Service User (Logon)')
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].lifecycle.code.value, FHIRCode('6').value)
        self.assertEqual(inst.entity[0].lifecycle.code.as_json(), '6')
        self.assertEqual(inst.entity[0].lifecycle.display.value, FHIRString('Access / Use').value)
        self.assertEqual(inst.entity[0].lifecycle.display.as_json(), 'Access / Use')
        self.assertEqual(inst.entity[0].lifecycle.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle').value)
        self.assertEqual(inst.entity[0].lifecycle.system.as_json(), 'http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle')
        self.assertEqual(inst.entity[0].name.value, FHIRString('Grahame\'s Laptop').value)
        self.assertEqual(inst.entity[0].name.as_json(), 'Grahame\'s Laptop')
        self.assertEqual(inst.entity[0].role.code.value, FHIRCode('4').value)
        self.assertEqual(inst.entity[0].role.code.as_json(), '4')
        self.assertEqual(inst.entity[0].role.display.value, FHIRString('Domain Resource').value)
        self.assertEqual(inst.entity[0].role.display.as_json(), 'Domain Resource')
        self.assertEqual(inst.entity[0].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[0].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('4').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '4')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('Other').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'Other')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2012-10-25T22:04:27+11:00').value)
        self.assertEqual(inst.recorded.as_json(), '2012-10-25T22:04:27+11:00')
        self.assertEqual(inst.recorded.date, FHIRInstant('2012-10-25T22:04:27+11:00').date)
        self.assertEqual(inst.source.site.value, FHIRString('Development').value)
        self.assertEqual(inst.source.site.as_json(), 'Development')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('110122').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '110122')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Login').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Login')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('110120').value)
        self.assertEqual(inst.subtype[0].code.as_json(), '110120')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('Application Start').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'Application Start')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.text.div.value, FHIRString('<div xmlns="http://www.w3.org/1999/xhtml">Application Start for under service login &quot;Grahame&quot; (id: Grahame\'s Test HL7Connect)</div>').value)
        self.assertEqual(inst.text.div.as_json(), '<div xmlns="http://www.w3.org/1999/xhtml">Application Start for under service login &quot;Grahame&quot; (id: Grahame\'s Test HL7Connect)</div>')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110100').value)
        self.assertEqual(inst.type.code.as_json(), '110100')
        self.assertEqual(inst.type.display.value, FHIRString('Application Activity').value)
        self.assertEqual(inst.type.display.as_json(), 'Application Activity')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')

    def testAuditEvent4(self):
        inst = self.instantiate_from('auditevent-example-error.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent4(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent4(inst2)

    def implAuditEvent4(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('C').value)
        self.assertEqual(inst.action.as_json(), 'C')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[0].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'Grahame Grieve')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].detail[0].type.value, FHIRString('requested transaction').value)
        self.assertEqual(inst.entity[0].detail[0].type.as_json(), 'requested transaction')
        self.assertEqual(inst.entity[0].detail[0].valueString.value, FHIRString('http POST ..... ').value)
        self.assertEqual(inst.entity[0].detail[0].valueString.as_json(), 'http POST ..... ')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '2')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.entity[1].description.value, FHIRString('transaction failed').value)
        self.assertEqual(inst.entity[1].description.as_json(), 'transaction failed')
        self.assertEqual(inst.entity[1].type.code.value, FHIRCode('OperationOutcome').value)
        self.assertEqual(inst.entity[1].type.code.as_json(), 'OperationOutcome')
        self.assertEqual(inst.entity[1].type.display.value, FHIRString('OperationOutcome').value)
        self.assertEqual(inst.entity[1].type.display.as_json(), 'OperationOutcome')
        self.assertEqual(inst.entity[1].type.system.value, FHIRUri('http://hl7.org/fhir/resource-types').value)
        self.assertEqual(inst.entity[1].type.system.as_json(), 'http://hl7.org/fhir/resource-types')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('8').value)
        self.assertEqual(inst.outcome.as_json(), '8')
        self.assertEqual(inst.outcomeDesc.value, FHIRString('Invalid request to create an Operation resource on the Patient endpoint.').value)
        self.assertEqual(inst.outcomeDesc.as_json(), 'Invalid request to create an Operation resource on the Patient endpoint.')
        self.assertEqual(inst.recorded.value, FHIRInstant('2017-09-07T23:42:24Z').value)
        self.assertEqual(inst.recorded.as_json(), '2017-09-07T23:42:24Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2017-09-07T23:42:24Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Cloud').value)
        self.assertEqual(inst.source.site.as_json(), 'Cloud')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('3').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '3')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Web Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Web Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('create').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'create')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('create').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'create')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://hl7.org/fhir/restful-interaction').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://hl7.org/fhir/restful-interaction')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('rest').value)
        self.assertEqual(inst.type.code.as_json(), 'rest')
        self.assertEqual(inst.type.display.value, FHIRString('Restful Operation').value)
        self.assertEqual(inst.type.display.as_json(), 'Restful Operation')
        self.assertEqual(inst.type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-event-type').value)
        self.assertEqual(inst.type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-event-type')

    def testAuditEvent5(self):
        inst = self.instantiate_from('audit-event-example-search.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent5(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent5(inst2)

    def implAuditEvent5(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('E').value)
        self.assertEqual(inst.action.as_json(), 'E')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[0].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'Grahame Grieve')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].query.value, FHIRBase64Binary('aHR0cDovL2ZoaXItZGV2LmhlYWx0aGludGVyc2VjdGlvbnMuY29tLmF1L29wZW4vRW5jb3VudGVyP3BhcnRpY2lwYW50PTEz').value)
        self.assertEqual(inst.entity[0].query.as_json(), 'aHR0cDovL2ZoaXItZGV2LmhlYWx0aGludGVyc2VjdGlvbnMuY29tLmF1L29wZW4vRW5jb3VudGVyP3BhcnRpY2lwYW50PTEz')
        self.assertEqual(inst.entity[0].role.code.value, FHIRCode('24').value)
        self.assertEqual(inst.entity[0].role.code.as_json(), '24')
        self.assertEqual(inst.entity[0].role.display.value, FHIRString('Query').value)
        self.assertEqual(inst.entity[0].role.display.as_json(), 'Query')
        self.assertEqual(inst.entity[0].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[0].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '2')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2015-08-22T23:42:24Z').value)
        self.assertEqual(inst.recorded.as_json(), '2015-08-22T23:42:24Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2015-08-22T23:42:24Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Cloud').value)
        self.assertEqual(inst.source.site.as_json(), 'Cloud')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('3').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '3')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Web Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Web Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('search').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'search')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('search').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'search')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://hl7.org/fhir/restful-interaction').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://hl7.org/fhir/restful-interaction')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('rest').value)
        self.assertEqual(inst.type.code.as_json(), 'rest')
        self.assertEqual(inst.type.display.value, FHIRString('Restful Operation').value)
        self.assertEqual(inst.type.display.as_json(), 'Restful Operation')
        self.assertEqual(inst.type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-event-type').value)
        self.assertEqual(inst.type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-event-type')

    def testAuditEvent6(self):
        inst = self.instantiate_from('audit-event-example-pixQuery.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent6(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent6(inst2)

    def implAuditEvent6(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('E').value)
        self.assertEqual(inst.action.as_json(), 'E')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '6580')
        self.assertEqual(inst.agent[0].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[0].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[0].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[0].network.type.as_json(), '1')
        self.assertFalse(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[1].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[1].name.as_json(), 'Grahame Grieve')
        self.assertTrue(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.entity[0].role.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].role.code.as_json(), '1')
        self.assertEqual(inst.entity[0].role.display.value, FHIRString('Patient').value)
        self.assertEqual(inst.entity[0].role.display.as_json(), 'Patient')
        self.assertEqual(inst.entity[0].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[0].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '1')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('Person').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'Person')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.entity[1].detail[0].type.value, FHIRString('MSH-10').value)
        self.assertEqual(inst.entity[1].detail[0].type.as_json(), 'MSH-10')
        self.assertEqual(inst.entity[1].detail[0].valueBase64Binary.value, FHIRBase64Binary('MS4yLjg0MC4xMTQzNTAuMS4xMy4wLjEuNy4xLjE=').value)
        self.assertEqual(inst.entity[1].detail[0].valueBase64Binary.as_json(), 'MS4yLjg0MC4xMTQzNTAuMS4xMy4wLjEuNy4xLjE=')
        self.assertEqual(inst.entity[1].role.code.value, FHIRCode('24').value)
        self.assertEqual(inst.entity[1].role.code.as_json(), '24')
        self.assertEqual(inst.entity[1].role.display.value, FHIRString('Query').value)
        self.assertEqual(inst.entity[1].role.display.as_json(), 'Query')
        self.assertEqual(inst.entity[1].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[1].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[1].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[1].type.code.as_json(), '2')
        self.assertEqual(inst.entity[1].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[1].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[1].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[1].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2015-08-26T23:42:24Z').value)
        self.assertEqual(inst.recorded.as_json(), '2015-08-26T23:42:24Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2015-08-26T23:42:24Z').date)
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('ITI-9').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'ITI-9')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('PIX Query').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'PIX Query')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('urn:oid:1.3.6.1.4.1.19376.1.2').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'urn:oid:1.3.6.1.4.1.19376.1.2')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110112').value)
        self.assertEqual(inst.type.code.as_json(), '110112')
        self.assertEqual(inst.type.display.value, FHIRString('Query').value)
        self.assertEqual(inst.type.display.as_json(), 'Query')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')

    def testAuditEvent7(self):
        inst = self.instantiate_from('audit-event-example-vread.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent7(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent7(inst2)

    def implAuditEvent7(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('R').value)
        self.assertEqual(inst.action.as_json(), 'R')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[0].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'Grahame Grieve')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].lifecycle.code.value, FHIRCode('6').value)
        self.assertEqual(inst.entity[0].lifecycle.code.as_json(), '6')
        self.assertEqual(inst.entity[0].lifecycle.display.value, FHIRString('Access / Use').value)
        self.assertEqual(inst.entity[0].lifecycle.display.as_json(), 'Access / Use')
        self.assertEqual(inst.entity[0].lifecycle.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle').value)
        self.assertEqual(inst.entity[0].lifecycle.system.as_json(), 'http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '2')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2013-06-20T23:42:24Z').value)
        self.assertEqual(inst.recorded.as_json(), '2013-06-20T23:42:24Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2013-06-20T23:42:24Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Cloud').value)
        self.assertEqual(inst.source.site.as_json(), 'Cloud')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('3').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '3')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Web Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Web Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('vread').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'vread')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('vread').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'vread')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://hl7.org/fhir/restful-interaction').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://hl7.org/fhir/restful-interaction')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('rest').value)
        self.assertEqual(inst.type.code.as_json(), 'rest')
        self.assertEqual(inst.type.display.value, FHIRString('Restful Operation').value)
        self.assertEqual(inst.type.display.as_json(), 'Restful Operation')
        self.assertEqual(inst.type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-event-type').value)
        self.assertEqual(inst.type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-event-type')

    def testAuditEvent8(self):
        inst = self.instantiate_from('audit-event-example-login.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent8(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent8(inst2)

    def implAuditEvent8(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('E').value)
        self.assertEqual(inst.action.as_json(), 'E')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('601847123').value)
        self.assertEqual(inst.agent[0].altId.as_json(), '601847123')
        self.assertEqual(inst.agent[0].name.value, FHIRString('Grahame Grieve').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'Grahame Grieve')
        self.assertEqual(inst.agent[0].network.address.value, FHIRString('127.0.0.1').value)
        self.assertEqual(inst.agent[0].network.address.as_json(), '127.0.0.1')
        self.assertEqual(inst.agent[0].network.type.value, FHIRCode('2').value)
        self.assertEqual(inst.agent[0].network.type.as_json(), '2')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('humanuser').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), 'humanuser')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('human user').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'human user')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/extra-security-role-type').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/extra-security-role-type')
        self.assertEqual(inst.agent[1].altId.value, FHIRString('6580').value)
        self.assertEqual(inst.agent[1].altId.as_json(), '6580')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('Workstation1.ehr.familyclinic.com').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'Workstation1.ehr.familyclinic.com')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.recorded.value, FHIRInstant('2013-06-20T23:41:23Z').value)
        self.assertEqual(inst.recorded.as_json(), '2013-06-20T23:41:23Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2013-06-20T23:41:23Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Cloud').value)
        self.assertEqual(inst.source.site.as_json(), 'Cloud')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('3').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '3')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Web Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Web Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('110122').value)
        self.assertEqual(inst.subtype[0].code.as_json(), '110122')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('Login').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'Login')
        self.assertEqual(inst.subtype[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.subtype[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110114').value)
        self.assertEqual(inst.type.code.as_json(), '110114')
        self.assertEqual(inst.type.display.value, FHIRString('User Authentication').value)
        self.assertEqual(inst.type.display.as_json(), 'User Authentication')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')

    def testAuditEvent9(self):
        inst = self.instantiate_from('auditevent-example-disclosure.json')
        self.assertIsNotNone(inst, 'Must have instantiated a AuditEvent instance')
        self.implAuditEvent9(inst)

        js = inst.as_json()
        self.assertEqual("AuditEvent", js["resourceType"])
        inst2 = auditevent.AuditEvent(js)
        self.implAuditEvent9(inst2)

    def implAuditEvent9(self, inst):
        self.assertEqual(inst.action.value, FHIRCode('R').value)
        self.assertEqual(inst.action.as_json(), 'R')
        self.assertEqual(inst.agent[0].altId.value, FHIRString('notMe').value)
        self.assertEqual(inst.agent[0].altId.as_json(), 'notMe')
        self.assertEqual(inst.agent[0].name.value, FHIRString('That guy everyone wishes would be caught').value)
        self.assertEqual(inst.agent[0].name.as_json(), 'That guy everyone wishes would be caught')
        self.assertEqual(inst.agent[0].network.address.value, FHIRString('custodian.net').value)
        self.assertEqual(inst.agent[0].network.address.as_json(), 'custodian.net')
        self.assertEqual(inst.agent[0].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[0].network.type.as_json(), '1')
        self.assertEqual(inst.agent[0].policy[0].value, FHIRUri('http://consent.com/yes').value)
        self.assertEqual(inst.agent[0].policy[0].as_json(), 'http://consent.com/yes')
        self.assertTrue(inst.agent[0].requestor)
        self.assertEqual(inst.agent[0].type.coding[0].code.value, FHIRCode('110153').value)
        self.assertEqual(inst.agent[0].type.coding[0].code.as_json(), '110153')
        self.assertEqual(inst.agent[0].type.coding[0].display.value, FHIRString('Source Role ID').value)
        self.assertEqual(inst.agent[0].type.coding[0].display.as_json(), 'Source Role ID')
        self.assertEqual(inst.agent[0].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[0].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.agent[1].network.address.value, FHIRString('marketing.land').value)
        self.assertEqual(inst.agent[1].network.address.as_json(), 'marketing.land')
        self.assertEqual(inst.agent[1].network.type.value, FHIRCode('1').value)
        self.assertEqual(inst.agent[1].network.type.as_json(), '1')
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].code.value, FHIRCode('HMARKT').value)
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].code.as_json(), 'HMARKT')
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].display.value, FHIRString('healthcare marketing').value)
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].display.as_json(), 'healthcare marketing')
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.agent[1].purposeOfUse[0].coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertFalse(inst.agent[1].requestor)
        self.assertEqual(inst.agent[1].type.coding[0].code.value, FHIRCode('110152').value)
        self.assertEqual(inst.agent[1].type.coding[0].code.as_json(), '110152')
        self.assertEqual(inst.agent[1].type.coding[0].display.value, FHIRString('Destination Role ID').value)
        self.assertEqual(inst.agent[1].type.coding[0].display.as_json(), 'Destination Role ID')
        self.assertEqual(inst.agent[1].type.coding[0].system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.agent[1].type.coding[0].system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')
        self.assertEqual(inst.entity[0].role.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].role.code.as_json(), '1')
        self.assertEqual(inst.entity[0].role.display.value, FHIRString('Patient').value)
        self.assertEqual(inst.entity[0].role.display.as_json(), 'Patient')
        self.assertEqual(inst.entity[0].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[0].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[0].type.code.value, FHIRCode('1').value)
        self.assertEqual(inst.entity[0].type.code.as_json(), '1')
        self.assertEqual(inst.entity[0].type.display.value, FHIRString('Person').value)
        self.assertEqual(inst.entity[0].type.display.as_json(), 'Person')
        self.assertEqual(inst.entity[0].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[0].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.entity[1].description.value, FHIRString('data about Everthing important').value)
        self.assertEqual(inst.entity[1].description.as_json(), 'data about Everthing important')
        self.assertEqual(inst.entity[1].lifecycle.code.value, FHIRCode('11').value)
        self.assertEqual(inst.entity[1].lifecycle.code.as_json(), '11')
        self.assertEqual(inst.entity[1].lifecycle.display.value, FHIRString('Disclosure').value)
        self.assertEqual(inst.entity[1].lifecycle.display.as_json(), 'Disclosure')
        self.assertEqual(inst.entity[1].lifecycle.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle').value)
        self.assertEqual(inst.entity[1].lifecycle.system.as_json(), 'http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle')
        self.assertEqual(inst.entity[1].name.value, FHIRString('Namne of What').value)
        self.assertEqual(inst.entity[1].name.as_json(), 'Namne of What')
        self.assertEqual(inst.entity[1].role.code.value, FHIRCode('4').value)
        self.assertEqual(inst.entity[1].role.code.as_json(), '4')
        self.assertEqual(inst.entity[1].role.display.value, FHIRString('Domain Resource').value)
        self.assertEqual(inst.entity[1].role.display.as_json(), 'Domain Resource')
        self.assertEqual(inst.entity[1].role.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/object-role').value)
        self.assertEqual(inst.entity[1].role.system.as_json(), 'http://terminology.hl7.org/CodeSystem/object-role')
        self.assertEqual(inst.entity[1].securityLabel[0].code.value, FHIRCode('V').value)
        self.assertEqual(inst.entity[1].securityLabel[0].code.as_json(), 'V')
        self.assertEqual(inst.entity[1].securityLabel[0].display.value, FHIRString('very restricted').value)
        self.assertEqual(inst.entity[1].securityLabel[0].display.as_json(), 'very restricted')
        self.assertEqual(inst.entity[1].securityLabel[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-Confidentiality').value)
        self.assertEqual(inst.entity[1].securityLabel[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-Confidentiality')
        self.assertEqual(inst.entity[1].securityLabel[1].code.value, FHIRCode('STD').value)
        self.assertEqual(inst.entity[1].securityLabel[1].code.as_json(), 'STD')
        self.assertEqual(inst.entity[1].securityLabel[1].display.value, FHIRString('sexually transmitted disease information sensitivity').value)
        self.assertEqual(inst.entity[1].securityLabel[1].display.as_json(), 'sexually transmitted disease information sensitivity')
        self.assertEqual(inst.entity[1].securityLabel[1].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActCode').value)
        self.assertEqual(inst.entity[1].securityLabel[1].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActCode')
        self.assertEqual(inst.entity[1].securityLabel[2].code.value, FHIRCode('DELAU').value)
        self.assertEqual(inst.entity[1].securityLabel[2].code.as_json(), 'DELAU')
        self.assertEqual(inst.entity[1].securityLabel[2].display.value, FHIRString('delete after use').value)
        self.assertEqual(inst.entity[1].securityLabel[2].display.as_json(), 'delete after use')
        self.assertEqual(inst.entity[1].securityLabel[2].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActCode').value)
        self.assertEqual(inst.entity[1].securityLabel[2].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActCode')
        self.assertEqual(inst.entity[1].type.code.value, FHIRCode('2').value)
        self.assertEqual(inst.entity[1].type.code.as_json(), '2')
        self.assertEqual(inst.entity[1].type.display.value, FHIRString('System Object').value)
        self.assertEqual(inst.entity[1].type.display.as_json(), 'System Object')
        self.assertEqual(inst.entity[1].type.system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/audit-entity-type').value)
        self.assertEqual(inst.entity[1].type.system.as_json(), 'http://terminology.hl7.org/CodeSystem/audit-entity-type')
        self.assertEqual(inst.meta.tag[0].code.value, FHIRCode('HTEST').value)
        self.assertEqual(inst.meta.tag[0].code.as_json(), 'HTEST')
        self.assertEqual(inst.meta.tag[0].display.value, FHIRString('test health data').value)
        self.assertEqual(inst.meta.tag[0].display.as_json(), 'test health data')
        self.assertEqual(inst.meta.tag[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.meta.tag[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.outcome.value, FHIRCode('0').value)
        self.assertEqual(inst.outcome.as_json(), '0')
        self.assertEqual(inst.outcomeDesc.value, FHIRString('Successful  Disclosure').value)
        self.assertEqual(inst.outcomeDesc.as_json(), 'Successful  Disclosure')
        self.assertEqual(inst.purposeOfEvent[0].coding[0].code.value, FHIRCode('HMARKT').value)
        self.assertEqual(inst.purposeOfEvent[0].coding[0].code.as_json(), 'HMARKT')
        self.assertEqual(inst.purposeOfEvent[0].coding[0].display.value, FHIRString('healthcare marketing').value)
        self.assertEqual(inst.purposeOfEvent[0].coding[0].display.as_json(), 'healthcare marketing')
        self.assertEqual(inst.purposeOfEvent[0].coding[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/v3-ActReason').value)
        self.assertEqual(inst.purposeOfEvent[0].coding[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/v3-ActReason')
        self.assertEqual(inst.recorded.value, FHIRInstant('2013-09-22T00:08:00Z').value)
        self.assertEqual(inst.recorded.as_json(), '2013-09-22T00:08:00Z')
        self.assertEqual(inst.recorded.date, FHIRInstant('2013-09-22T00:08:00Z').date)
        self.assertEqual(inst.source.site.value, FHIRString('Watcher').value)
        self.assertEqual(inst.source.site.as_json(), 'Watcher')
        self.assertEqual(inst.source.type[0].code.value, FHIRCode('4').value)
        self.assertEqual(inst.source.type[0].code.as_json(), '4')
        self.assertEqual(inst.source.type[0].display.value, FHIRString('Application Server').value)
        self.assertEqual(inst.source.type[0].display.as_json(), 'Application Server')
        self.assertEqual(inst.source.type[0].system.value, FHIRUri('http://terminology.hl7.org/CodeSystem/security-source-type').value)
        self.assertEqual(inst.source.type[0].system.as_json(), 'http://terminology.hl7.org/CodeSystem/security-source-type')
        self.assertEqual(inst.subtype[0].code.value, FHIRCode('Disclosure').value)
        self.assertEqual(inst.subtype[0].code.as_json(), 'Disclosure')
        self.assertEqual(inst.subtype[0].display.value, FHIRString('HIPAA disclosure').value)
        self.assertEqual(inst.subtype[0].display.as_json(), 'HIPAA disclosure')
        self.assertEqual(inst.text.div.value, FHIRString('<div xmlns="http://www.w3.org/1999/xhtml">Disclosure by some idiot, for marketing reasons, to places unknown, of a Poor Sap, data about Everthing important.</div>').value)
        self.assertEqual(inst.text.div.as_json(), '<div xmlns="http://www.w3.org/1999/xhtml">Disclosure by some idiot, for marketing reasons, to places unknown, of a Poor Sap, data about Everthing important.</div>')
        self.assertEqual(inst.text.status.value, FHIRCode('generated').value)
        self.assertEqual(inst.text.status.as_json(), 'generated')
        self.assertEqual(inst.type.code.value, FHIRCode('110106').value)
        self.assertEqual(inst.type.code.as_json(), '110106')
        self.assertEqual(inst.type.display.value, FHIRString('Export').value)
        self.assertEqual(inst.type.display.as_json(), 'Export')
        self.assertEqual(inst.type.system.value, FHIRUri('http://dicom.nema.org/resources/ontology/DCM').value)
        self.assertEqual(inst.type.system.as_json(), 'http://dicom.nema.org/resources/ontology/DCM')


from fhirclient.models.fhirdatatypes import FHIRCode, FHIRString, FHIRUri, FHIRInstant, FHIRBase64Binary